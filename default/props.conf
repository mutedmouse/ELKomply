[default]

[helk]

[securityonion]

[source::helk]
TRANSFORMS-extract_host = extract_host
SHOULD_LINEMERGE = FALSE
FIELDALIAS-all_user = user_name ASNEW user
FIELDALIAS-all_transport = network_protocol ASNEW transport
FIELDALIAS-all_src = src_ip_addr ASNEW src
FIELDALIAS-all_vendor_product = source_name ASNEW vendor_product
EVAL-dest = case(event_id=3,dst_ip_addr,event_id=22,dst_host_name,isnull(dest), host)
FIELDALIAS-all_parent_process = process_parent_command_line ASNEW parent_process
FIELDALIAS-all_parent_process_exec = process_parent_name ASNEW parent_process_exec
FIELDALIAS-all_parent_process_guid = process_parent_guid ASNEW parent_process_guid
FIELDALIAS-all_parent_process_id = process_parent_id ASNEW parent_process_id
FIELDALIAS-all_parent_process_name = process_parent_name ASNEW parent_process_name
FIELDALIAS-all_parent_process_path = process_parent_path ASNEW parent_process_path
FIELDALIAS-all_process = process_command_line ASNEW process
FIELDALIAS-all_process_exec = process_name ASNEW process_exec
FIELDALIAS-all_process_hash = hash_md5 ASNEW process_hash
FIELDALIAS-all_user_id = user_name ASNEW user_id
FIELDALIAS-all_Account_Name = user_name ASNEW Account_Name
FIELDALIAS-all_Process_Command_Line = process_command_line ASNEW Process_Command_Line
EVAL-hashes = case(isnotnull(hash_md5),"MD5="+hash_md5+",SHA1="+hash_sha1+",SHA256="+hash_sha256)
EVAL-Hashes = case(isnotnull(hash_md5),"MD5="+hash_md5+",SHA1="+hash_sha1+",SHA256="+hash_sha256)
FIELDALIAS-all_file_create_time = file_creation_time ASNEW file_create_time
EVAL-file_name = mvindex(split(file_name,"\\"),-1)
EVAL-file_path = case(isnotnull(file_name), file_name)
EVAL-registry_hive = mvindex(split(registry_key_path,"\\"),0)
EVAL-registry_key_name = mvindex(split(registry_key_path,"\\"),-1)
EXTRACT-registry_path = registry_key_path\":\"\w+\\\\(?P<registry_path>[^\"]+)
FIELDALIAS-all_registry_value_data = registry_key_value ASNEW registry_value_data
FIELDALIAS-all_registry_value_text = registry_key_value ASNEW registry_value_text
FIELDALIAS-endpoint_traffic_dest_ip = dest_ip_addr ASNEW dest_ip
FIELDALIAS-endpoint_traffic_dest_port = dst_port ASNEW dest_port
FIELDALIAS-endpoint_traffic_protocol_version = dst_ip_version ASNEW protocol_version
FIELDALIAS-endpoint_traffic_src_ip = src_ip_addr ASNEW src_ip
FIELDALIAS-endpoint_traffic_transport = network_protocol ASNEW transport
EVAL-action = case(event_id=4720,"created",event_id=4740,"lockout",event_id=4726,"deleted",event_id=4722,"modified",event_id=4738,"modified",event_id=4724,"modified")
EVAL-object = case(event_id=4720,target_user_name,event_id=4740,user_name,event_id=4726,target_user_name,event_id=4722,target_user_name,event_id=4738,target_user_name,event_id=4724,target_user_name)

[source::securityonion]
TRANSFORMS-extract_sensor = extract_sensor
EXTRACT-ssl_subject_email = certificate_subject\":\".*emailAddress=(?P<ssl_subject_email>[^\,]+),
EVAL-vendor_product = case(event_type=="snort","snort",event_type!="snort","zeek")
FIELDALIAS-certificates_ssl_subject_common_name = certificate_common_name ASNEW ssl_subject_common_name
EVAL-type = case(event_type=="snort", "alert", event_type=="suricata", "alert")
FIELDALIAS-certificates_ssl_subject_street = certificate_street ASNEW ssl_subject_street
FIELDALIAS-certificates_ssl_publickkey_algorithm = certificate_key_algorithm ASNEW ssl_publickey_algorithm
EVAL-ids_type = "network"
FIELDALIAS-intrusion_detection_alert = alert ASNEW signature
FIELDALIAS-certificates_ssl_engine = certificate_key_algorithm ASNEW ssl_engine
FIELDALIAS-certificates_ssl_issuer_street = issuer_street ASNEW ssl_issuer_street
FIELDALIAS-all_src_ip = source_ip ASNEW src
FIELDALIAS-certificates_ssl_subject_locality = certificate_locality ASNEW ssl_subject_locality
FIELDALIAS-all_src_port = source_port ASNEW src_port
FIELDALIAS-certificates_ssl_issuer_unit = issuer_unit ASNEW ssl_issuer_unit
EVAL-ssl_end_time = floor(strptime(certificatenot_valid_after, "%Y-%m-%dT%H:%M:%S"))
FIELDALIAS-certificates_ssl_subject_state = certificate_state ASNEW ssl_subject_state
EVAL-ssl_version = case(event_type=="bro_ssl",version)
FIELDALIAS-certificates_ssl_subject = certificate_subject ASNEW ssl_subject
EVAL-ssl_start_time = floor(strptime(certificatenot_valid_before, "%Y-%m-%dT%H:%M:%S"))
EVAL-ssl_is_valid = if(floor(strptime(certificatenot_valid_after, "%Y-%m-%dT%H:%M:%S")-now)>=0,"true","false")
EXTRACT-certificate_not_valid_after = certificate\.not_valid_after\\\":\\\"(?P<certificatenot_valid_after>[^\.]+)
FIELDALIAS-certificates_ssl_issuer = certificate_issuer ASNEW ssl_issuer
FIELDALIAS-certificates_ssl_serial = certificate_serial ASNEW ssl_serial
FIELDALIAS-certificates_ssl_subject_unit = certificate_unit ASNEW ssl_subject_unit
FIELDALIAS-certificates_ssl_issuer_state = issuer_state ASNEW ssl_issuer_state
FIELDALIAS-all_dest_ip = destination_ip ASNEW dest_ip
EXTRACT-certificate_not_valid_before = certificate\.not_valid_before\\\":\\\"(?P<certificatenot_valid_before>[^\.]+)
EVAL-severity = case(priority=="1", "high", priority=="2", "medium", priority=="3", "low", priority=="4", "informational", priority=="5", "unknown")
FIELDALIAS-all_dest_port = destination_port ASNEW dest_port
FIELDALIAS-all_src = source_ip ASNEW src
FIELDALIAS-certificates_ssl_issuer_locality = issuer_locality ASNEW ssl_issuer_locality
EVAL-ssl_session_id = case(event_type=="bro_ssl",uid)
FIELDALIAS-certificates_ssl_issuer_common_name = issuer_common_name ASNEW ssl_issuer_common_name
FIELDALIAS-certificates_ssl_subject_organization = certificate_organization ASNEW ssl_subject_organization
FIELDALIAS-alert_severity_id = priority ASNEW severity_id
FIELDALIAS-alert_subject = classification ASNEW subject
FIELDALIAS-all_dest = destination_ip ASNEW dest
EXTRACT-ssl_issuer_email = certificate_issuer\":\"\w*emailAddress=(?P<ssl_issuer_email>[^\,]+),
EVAL-answer = spath(_raw,"answers{}")
FIELDALIAS-alert_body = signature_info ASNEW body
FIELDALIAS-certificates_ssl_issuer_organization = issuer_organization ASNEW ssl_issuer_organization
FIELDALIAS-alert_id = sid ASNEW id
EVAL-app = case(event_type="bro_conn",service)
EVAL-bytes = case(event_type="bro_conn",total_bytes)
FIELDALIAS-all_bytes_in = original_bytes ASNEW bytes_in
FIELDALIAS-all_bytes_out = respond_bytes ASNEW bytes_out
FIELDALIAS-network_traffic_session_id = uid ASNEW session_id
EVAL-packets = original_packets+respond_packets
FIELDALIAS-network_traffic_packets_in = original_packets ASNEW packets_in
FIELDALIAS-network_traffic_packets_out = respond_packets ASNEW packets_out
FIELDALIAS-network_traffic_transport = protocol ASNEW transport
EVAL-protocol_version = case(like(source_ip,"%.%"),4,like(source_ip,"%:%"),6)
EVAL-direction = case(local_orig="true","outbound",local_orig="false","inbound")
EVAL-file_hash = upper(case(isnotnull(md5),"MD5="+md5+",SHA1="+sha1))
FIELDALIAS-endpoint_securityonion_file_name = file_name ASNEW fuid
FIELDALIAS-all_conn_transforms = "id.orig_h" ASNEW src_ip "id.orig_p" ASNEW src_port "id.resp_h" ASNEW dest_ip "id.resp_port" ASNEW dest_port
FIELDALIAS-all_conn_transforms_cim = dest_ip ASNEW dest "id.orig_h" ASNEW src "id.resp_h" ASNEW dest orig_bytes ASNEW bytes_out orig_pkts ASNEW packets_out proto ASNEW protocol resp_bytes ASNEW bytes_in resp_pkts ASNEW packets_in src_ip ASNEW src
LOOKUP-conn_state = conn_state state AS conn_state OUTPUTNEW description AS conn_desc
EVAL-alert_gid = case(isnull(gid) AND event_type=="alert",spath(_raw,"alert.gid"))
EVAL-alert_rev = case(isnull(rev) AND event_type=="alert",spath(_raw,"alert.rev"))
EVAL-alert_signature_id = case(isnull(signature_id) AND event_type=="alert",spath(_raw,"alert.signature_id"))
EVAL-action = case(isnull(action) AND event_type=="alert",spath(_raw,"alert.action"))
LOOKUP-severity = severity alert_severity AS alert_severity OUTPUT severity AS severity
EVAL-alert_severity = case(isnull(severity) AND event_type=="alert",spath(_raw,"alert.severity"))
EVAL-signature = case(isnull(signature) AND event_type=="alert",spath(_raw,"alert.signature"))
FIELDALIAS-all_securityonion_dns_cim = qtype_name ASNEW query_type rcode ASNEW reply_code_id rcode_name ASNEW reply_code
EVAL-message_type = case((dataset=="dns" OR event_type=="bro_dns") AND isnull(rcode),"QUERY",(dataset=="dns" OR event_type=="bro_dns") AND isnotnull(rcode),"RESPONSE")
EVAL-category = case(isnull(category) AND event_type=="alert",spath(_raw,"alert.category"))
